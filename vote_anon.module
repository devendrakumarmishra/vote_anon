<?php

/**
 * @file
 * Contains vote_anon.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\node\NodeInterface;
use Drupal\Core\Url;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;

/**
 * Implements hook_help().
 */
function vote_anon_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the vote_anon module.
    case 'help.page.vote_anon':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Voting feature for all users.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function vote_anon_theme() {
  return [
    'vote_anon' => [
      'render element' => 'children',
    ],
  ];
}

/**
 * Implements hook_node_links_alter().
 */
function vote_anon_node_links_alter(array &$links, NodeInterface $entity, array &$context) {
  /*$links['vote_anon'] = [
    '#attached' => ['library' => ['core/drupal.ajax']],
    '#attributes' => ['class' => ['use-ajax']],
    '#links' => [
      'vote_anon' => [
        'title' => t('Vote for @title', array('@title' => $entity->getTitle())),
        'url' => Url::fromRoute('vote_anon.vote_ajax_link', ['nojs' => 'ajax','node' => $entity->id()]),
       ],
    ],
  ];*/
}

/**
 * Implements hook_preprocess_node().
 */
function vote_anon_preprocess_node(&$variables) {
  // Check if Cookie is set
  /*$node = $variables['node'];
  $build = array();
  $config = \Drupal::config('vote_anon.voteconfiguration');
  $cookie = $config->get('voting_cookie');
  if (!isset($cookie)) {
    $build['vote_ajax_link'] = [
      '#type' => 'link',
      '#title' => t('Vote for @title', array('@title' => $node->getTitle())),
      '#attached' => ['library' => ['core/drupal.ajax']],
      '#attributes' => ['class' => ['use-ajax']],
      '#url' => Url::fromRoute('vote_anon.vote_ajax_link', ['nojs' => 'ajax','node' => $node->id()]),
    ];
  }
  else {
    $build['vote_ajax_link'] = [
      '#type' => 'markup',
      '#markup' => t('Vote for @title', array('@title' => $node->getTitle())),
    ];
  }
  $build['vote_ajax_link']['destination'] = [
    '#type' => 'container',
    '#attributes' => ['id' => ["votedestinationdiv{$node->id()}"]],
  ];
  $variables['label'] = $variables['elements']['title'];
  $variables['vote_ajax_link'] =  render($build);
  $variables['nid'] = $node->id();
  $variables['content']['vote_ajax_link'] = 'New Text';*/
  //print_r($variables);
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function vote_anon_node_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  $build['vote_ajax_link'] = [
    '#type' => 'link',
    '#title' => t('Vote for @title', array('@title' => $entity->getTitle())),
    '#attached' => ['library' => ['core/drupal.ajax']],
    '#attributes' => ['class' => ['use-ajax']],
    '#url' => Url::fromRoute('vote_anon.vote_ajax_link', ['nojs' => 'ajax','node' => $entity->id()]),
    '#prefix' => '<div class="votelink btn btn-info">',
    '#suffix' => '</div>',
  ];
  $build['vote_ajax_link']['destination'] = [
    '#type' => 'container',
    '#attributes' => ['id' => ["votedestinationdiv{$entity->id()}"], 'class' => 'btn'],
  ];
}



